
//-------------------------------------------------------------------------------------------------
//  -- 版权所有者   : 中国大恒（集团）有限公司北京图像视觉技术分公司, 2010 -2015.
//  -- 保密级别     ：绝密.
//  -- 部门         : 硬件部，FPGA工作组
//  -- 模块名       : ccd_count.v
//  -- 设计者       : 禹剑
//-------------------------------------------------------------------------------------------------
//
//  --修改记录  :
//
//  -- 作者         :| 修改日期     :|  修改说明
//---------------------------------------------------------------------------------------
//  -- 禹剑       	:| 09/01/2013   :|  初始版本
//  -- 陈小平      	:| 04/29/2015   :|  进行修改，适应于ICX445 sensor
//  -- 邢海涛      	:| 2015/12/8    :|  移植到u3
//---------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------
//
//  -- 模块描述     :
//              1)  : 生成CCD计数器
//
//-------------------------------------------------------------------------------------------------
//仿真单位/精度
`timescale      1ns/100ps
//-------------------------------------------------------------------------------------------------

module ccd_count # (
	parameter	LINE_PERIOD		= 1532		,	//行周期
	parameter	LINE_CNT_WIDTH	= 13			//行计数器宽度
	)
	(
	input							clk     	,   //时钟
	input							reset		,	//
	output							o_line_end	,	//
	output	[LINE_CNT_WIDTH-1:0]	ov_count		//
	);

	//	ref signals
	//	-------------------------------------------------------------------------------------
	//	信号定义
	//	-------------------------------------------------------------------------------------
	reg		[LINE_CNT_WIDTH-1:0]		count		= 'b0;
	reg									line_end	= 1'b0;

	//	ref ARCHITECTURE
	//  ===============================================================================================
	//  第二部分：计数器逻辑
	//  ===============================================================================================
	//  -------------------------------------------------------------------------------------
	//  功能说明：生成周期计数器
	//  -------------------------------------------------------------------------------------
	always @ (posedge clk) begin
		if(reset) begin
			count	<= 'b0;
		end
		else if(count==(LINE_PERIOD-1)) begin
			count	<= 'b0;
		end
		else begin
			count	<= count + 1'b1;
		end
	end
	assign	ov_count	= count;

	//  -------------------------------------------------------------------------------------
	//  功能说明：生成周期标志
	//  -------------------------------------------------------------------------------------
	always @ (posedge clk) begin
		if(count==(LINE_PERIOD-2)) begin
			line_end	<= 1'b1;
		end
		else begin
			line_end	<= 1'b0;
		end
	end
	assign	o_line_end	= line_end;

endmodule
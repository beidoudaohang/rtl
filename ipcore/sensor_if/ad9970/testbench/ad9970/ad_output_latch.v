//-------------------------------------------------------------------------------------------------
//  -- 版权所有者   : 中国大恒（集团）有限公司北京图像视觉技术分公司, 2010 -2015.
//  -- 保密级别     ：绝密.
//  -- 部门         : 硬件部，FPGA工作组
//  -- 模块名       : ad_output_latch
//  -- 设计者       : 邢海涛
//-------------------------------------------------------------------------------------------------
//
//  -- 版本记录 :
//
//  -- 作者         :| 修改日期				:|  修改说明
//-------------------------------------------------------------------------------------------------
//  -- 邢海涛       :| 2015/8/9 14:16:15	:|  初始版本
//-------------------------------------------------------------------------------------------------
//
//  -- 模块描述     :
//              1)  : ... ...
//
//              2)  : ... ...
//
//              3)  : ... ...
//
//-------------------------------------------------------------------------------------------------
//仿真单位/精度
`timescale 1ns/1ps
//-------------------------------------------------------------------------------------------------

module ad_output_latch (
	input				clk					,	//并行时钟
	input	[13:0]		iv_pix_data			,	//像素数据
	input				i_lvds_pattern_en	,	//lvds测试数使能
	input	[15:0]		iv_lvds_pattern		,	//lvds测试数
	input				i_sync_word_sel		,	//同步字选择信号
	input	[15:0]		iv_sync_word		,	//同步字
	output	[15:0]		ov_pix_data				//输出像素数据
	);

	//	ref signals
	reg		[15:0]			pattern_mux		= 16'b0;
	reg		[15:0]			pattern_mux_dly	= 16'b0;
	reg		[15:0]			pix_data_reg	= 16'b0;


	//	ref ARCHITECTURE

	//	-------------------------------------------------------------------------------------
	//	测试数选择mux
	//	-------------------------------------------------------------------------------------
	always @ (posedge clk) begin
		if(i_lvds_pattern_en) begin
			pattern_mux	<= iv_lvds_pattern;
		end
		else begin
			pattern_mux	<= {iv_pix_data,2'b00};
		end
	end

	//	-------------------------------------------------------------------------------------
	//	延时1拍
	//	-------------------------------------------------------------------------------------
	always @ (posedge clk) begin
		pattern_mux_dly	<= pattern_mux;
	end

	//	-------------------------------------------------------------------------------------
	//	替换同步字
	//	-------------------------------------------------------------------------------------
	always @ (posedge clk) begin
		if(i_sync_word_sel) begin
			pix_data_reg	<= iv_sync_word;
		end
		else begin
			pix_data_reg	<= pattern_mux_dly;
		end
	end
	assign	ov_pix_data	= pix_data_reg	;



endmodule

//-------------------------------------------------------------------------------------------------
//  -- 版权所有者   : 中国大恒（集团）有限公司北京图像视觉技术分公司, 2010 -2015.
//  -- 保密级别     ：绝密.
//  -- 部门         : 硬件部，FPGA工作组
//  -- 模块名       : fifo_ctrl
//  -- 设计者       : 邢海涛
//-------------------------------------------------------------------------------------------------
//
//  -- 版本记录 :
//
//  -- 作者         :| 修改日期				:|  修改说明
//-------------------------------------------------------------------------------------------------
//  -- 邢海涛       :| 2013/6/13 10:17:01	:|  初始版本
//  -- 邢海涛       :| 2015/3/30 15:39:19	:|  代码风格改进，module从fifo_con改为fifo_ctrl
//-------------------------------------------------------------------------------------------------
//
//  -- 模块描述     :	前端FIFO的复位模块，产生1CLK的复位信号
//              1)  : 异步FIFO的读写端口需要对复位信号同步化，因此在各自时钟域的3个周期内，FIFO都是出于复位状态
//
//              2)  : fval和dval之间要有足够的空隙
//
//              3)  : ... ...
//
//-------------------------------------------------------------------------------------------------
//仿真单位/精度
`timescale 1ns/1ps
//-------------------------------------------------------------------------------------------------

module fifo_ctrl (
	input			clk					,	//时钟输入
	input			i_fval				,	//场信号
	output			o_reset_front_buf		//前端FIFO复位信号
	);

	//ref signals
	reg				fval_dly		= 1'b0;
	wire			fval_rise		;
	reg				reset_buf_reg	= 1'b0;


	//ref ARCHITECTURE

	//	-------------------------------------------------------------------------------------
	//	当fval上升沿到来时，复位前端FIFO
	//	-------------------------------------------------------------------------------------
	always @ (posedge clk) begin
		fval_dly		<= i_fval;
	end
	assign	fval_rise	= (fval_dly==1'b0 && i_fval==1'b1) ? 1'b1 : 1'b0;

	//	-------------------------------------------------------------------------------------
	//	上升沿信号打一拍，作为buf的复位信号
	//	-------------------------------------------------------------------------------------
	always @ (posedge clk) begin
		reset_buf_reg	<= fval_rise;
	end
	assign	o_reset_front_buf	= reset_buf_reg;


endmodule
